"""init schema

Revision ID: e356d3b04e6f
Revises: 
Create Date: 2025-09-09 08:35:46.651356+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e356d3b04e6f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidate_cvs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('raw_text', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('certifications', sa.JSON(), nullable=True),
    sa.Column('education', sa.JSON(), nullable=True),
    sa.Column('languages', sa.JSON(), nullable=True),
    sa.Column('total_experience_years', sa.Float(), nullable=True),
    sa.Column('embedding_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('job_descriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('seniority_level', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('salary_range', sa.JSON(), nullable=True),
    sa.Column('raw_text', sa.Text(), nullable=False),
    sa.Column('parsed_requirements', sa.JSON(), nullable=True),
    sa.Column('soft_skills', sa.JSON(), nullable=True),
    sa.Column('cultural_indicators', sa.JSON(), nullable=True),
    sa.Column('bias_flags', sa.JSON(), nullable=True),
    sa.Column('embedding_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('cv_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cv_id', sa.UUID(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('achievements', sa.JSON(), nullable=True),
    sa.Column('technologies', sa.JSON(), nullable=True),
    sa.Column('team_size', sa.Integer(), nullable=True),
    sa.Column('reporting_level', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['candidate_cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('cv_skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cv_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='skilllevel'), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['candidate_cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('job_skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='skilllevel'), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job_descriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('session_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('cv_id', sa.UUID(), nullable=True),
    sa.Column('interview_type', sa.String(), nullable=False),
    sa.Column('total_time_seconds', sa.Integer(), nullable=False),
    sa.Column('question_queue', sa.JSON(), nullable=True),
    sa.Column('current_index', sa.Integer(), nullable=True),
    sa.Column('time_allocations', sa.JSON(), nullable=True),
    sa.Column('followup_counts', sa.JSON(), nullable=True),
    sa.Column('time_remaining', sa.Integer(), nullable=False),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('audio_settings', sa.JSON(), nullable=True),
    sa.Column('interruptions', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['candidate_cvs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['job_id'], ['job_descriptions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('session_states')
    op.drop_table('job_skills')
    op.drop_table('cv_skills')
    op.drop_table('cv_entries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('job_descriptions')
    op.drop_table('candidate_cvs')
    # ### end Alembic commands ###
